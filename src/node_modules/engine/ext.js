import {Point, Rectangle} from 'pixi.js';

Object.defineProperty(Rectangle.prototype, 'center', {
  get: function() {
    if (!this.center_) {
      this.center_ = new Point(0, 0);
    }
    this.center_.x = this.x + this.width / 2;
    this.center_.y = this.y + this.height / 2;
    return this.center_;
  },
});

const overlap = new Rectangle();

const collision = {
  a: new Point(),
  b: new Point(),
  overlap: null,
};

const resetCollision = () => {
  collision.overlap = null;
  collision.a.set(0);
  collision.b.set(0);
};

Object.assign(Rectangle, {
  overlapping(a, b) {
    let result = false;
    if (a && b) {
      result = !(
        a.right <= b.left ||
        a.bottom <= b.top ||
        a.left >= b.right ||
        a.top >= b.bottom);
    }
    return result;
  },
  getOverlap(a, b) {
    let rect = null;
    if (this.overlapping(a, b)) {
      rect = overlap;
      const oLeft = Math.max(a.left, b.left);
      const oRight = Math.min(a.right, b.right);
      const oTop = Math.max(a.top, b.top);
      const oBottom = Math.min(a.bottom, b.bottom);
      rect.x = oLeft;
      rect.y = oTop;
      rect.width = oRight - oLeft;
      rect.height = oBottom - oTop;
    }
    return rect;
  },
  getCollision(a, b, weight) {
    let result = null;
    const rect = this.getOverlap(a, b);
    if (rect) {
      resetCollision();
      result = collision;
      result.overlap = rect;
      const vertical = rect.height < rect.width;
      const swap = (vertical && (a.center.y > b.center.y)) ||
                   (!vertical && (a.center.x > b.center.x));
      const swapMult = swap ? -1 : 1;
      const aMult = -(1 - weight) * swapMult;
      const bMult = weight * swapMult;
      if (vertical) {
        result.a.y = rect.height * aMult;
        result.b.y = rect.height * bMult;
      } else {
        result.a.x = rect.width * aMult;
        result.b.x = rect.width * bMult;
      }
    }
    return result;
  },
  resolveCollision(positionA, positionB, collision) {
    if (collision) {
      positionA.x += collision.a.x;
      positionA.y += collision.a.y;
      positionB.x += collision.b.x;
      positionB.y += collision.b.y;
    }
  },
});
